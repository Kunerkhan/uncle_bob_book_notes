# Коммуникация
Клиенты приходят в IT компании, чтобы сделать программный продукт.
IT компания собирает команду под каждый проект.
В команде есть проектный менеджер, который передает требования клиента разработчикам.
И у всех участников процесса свои интересы.
Клиент хочет сделать уникальный или лучший функционал, чтобы выделиться среди конкурентов.
Проектный менеджер хочет сдать все в сроки и выполнить желания клиента, чтобы он оставил хороший отзыв.
Разработчики хотят написать хороший код, чтобы проект было легко поддерживать и расширять.
Как видите у всех могут быть разные цели. И зависимости от целей выстраивается диалог.

## Говорить нет
Профессионал не боится сказать нет. Не важно будь проектный менеджер или даже директор компании.
В этом плане немного зависит от компании. Если компания хорошая, то в ней ценится умение говорить нет.

Споры в команде рождают лучшие решения и решают многие проблемы.
Нужно искать пути, чтобы прийти к согласию. Поэтому все участники команды должны помнить об этом.

## Почему
И не всегда “нет” должно сопровождаться каким-либо объяснением.
Потому что может привести к лишним бюрократическим процессам, что замедляет работу.
Профессионал должен уметь говорить фактами. 

Но, когда ставки высоки, то вы должны подробно и точно описать причины.
Особенно в таких моментах профессионал проявляет настойчивость, чтобы быть услышанным.

## Умение работать в коллективе
Каждый участник в команде должен соблюдать интересы команды
Часто разработчику приходится брать на себя обязательства, которые были приняты без его ведома.

*К примеру: Заказчик просит закончить работу раньше установленного срока, а менеджер ни с кем не посоветовавшись просто принимает пожелания заказчика.*

Профессионал в такой ситуации немедленно сообщит об ошибке в изначальной оценке, из-за которой невозможно выполнить в сроки до начала работы.
А менеджер сообщит об этом клиенту. Дальше либо урезается функционал или меняются приоритеты.
Но бывает менеджер не хочет слышать вас и просит вас “постараться” все успеть. 
Ни в коем случае не пытайтесь. Это обычный способ манипулирования не ведитесь.

Попытка в такой ситуации означает приложить доп усилия.
А если вы можете приложить доп усилия, то до этого вы не работали в полную силу.
И если вы соглашаетесь, то вы берете на себя лишние обязательства.
Если у вас получится, то результатом будет успех, иначе провал.
Профессионалы не геройствуют ради славы. 
Героизм профессионалов - качественно выполнить свою работу, не нарушив сроки.
Профессионал понимает границы своих возможностей.
Они знают сколько часов они могут переработать, и о жертвах ради переработок.

## Пассивная агрессия
Профессионал всегда думает о команде.
Если ваш менеджер проигнорировал ваши сомнения, то не стоит ждать момента катастрофы.
Тогда можно пригрозить тем, что вы пойдете к руководству, если менеджер продолжит бездействовать.
Да, неприятно. Но порой это единственный рычаг, чтобы избежать последствий катастрофы.

Компания всегда хочет выполнить пожелания клиента.  
Если вы видите, что вас просят переработать, менеджер подгоняет и просит “попытаться”.
Не соглашайтесь!

И не убеждайте себя в том, что вы все сделаете. Профессионалы не занимаются самообманом.
Скорее всего у вас нет плана для такого ситуации и в методах вашей работы ничего не поменяется.
А давление и спешка приведут к ошибкам и ухудшению качества кода. 
Отказ от стандартов качества работы в угоду скорости последняя черта непрофессионализма.
Не говоря уже, что может негативно сказаться на вашем здоровье.

Клиент никогда не беспокоиться о срывах срока больше, чем вы.
Разработчик должен понимать, что клиент всегда будет добавлять объем работы: новый функционал, изменение плана и т.д.
И часто в самых последний момент.

Профессионал не обязан отвечать “да” на все.
Но он должен приложить максимум усилий, чтобы “да” стало возможным.
Если он говорит “да” только тогда и только тогда, когда у него самого нет сомнений.
И так, что у собеседника не возникнет сомнений.
